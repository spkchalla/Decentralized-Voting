export function hash(plain: Buffer | string, options: Options & {
    raw?: boolean | undefined;
}): Promise<Buffer | string>;
export function needsRehash(digest: string, options?: Options | undefined): boolean;
export function verify(digest: string, plain: Buffer | string, options?: Options | undefined): Promise<boolean>;
export type Options = {
    hashLength?: number | undefined;
    timeCost?: number | undefined;
    memoryCost?: number | undefined;
    parallelism?: number | undefined;
    saltLength?: number | undefined;
    type?: 0 | 2 | 1 | undefined;
    version?: number | undefined;
    salt?: any;
    associatedData?: any;
    secret?: any;
};
export const argon2d: 0;
export const argon2i: 1;
export const argon2id: 2;
export const limits: Readonly<{
    hashLength: {
        min: number;
        max: number;
    };
    memoryCost: {
        min: number;
        max: number;
    };
    timeCost: {
        min: number;
        max: number;
    };
    parallelism: {
        min: number;
        max: number;
    };
}>;
//# sourceMappingURL=argon2.d.cts.map